install.packages("BRugs", lib="C:/Program Files/R/R-2.14.0/library")
install.packages("R2OpenBUGS", lib="C:/Program Files/R/R-2.14.0/library")
library("R2OpenBUGS")
library("coda")
install.packages("R2WinBUGS", lib="C:/Program Files/R/R-2.14.0/library")
library("R2WinBUGS")
remove.packages("raster")
load("E:/Projects/atlantic_rainforests/bird_models/community_model/models/.RData")
load("E:\\Projects\\seq_genetics\\analysis\\distribution_models\\models\\winbugs\\winbugs_models.RData")
install.packages("BRugs", lib="C:/Program Files/R/R-2.14.0/library")
install.packages("R2OpenBUGS", lib="C:/Program Files/R/R-2.14.0/library")
library("R2OpenBUGS")
library("coda")
install.packages("R2WinBUGS", lib="C:/Program Files/R/R-2.14.0/library")
library("R2WinBUGS")
remove.packages("raster")
load("E:/Projects/atlantic_rainforests/bird_models/community_model/models/.RData")
save.image("E:\\Projects\\seq_genetics\\analysis\\distribution_models\\models\\winbugs\\winbugs_models.RData")
library("foreign")
#read in data
Surveys <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid2_5km <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/fin_2_5km_grid.dbf")
Grid_Pts_500m <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_pts_500m_final.dbf")
Dbvg1 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg1.dbf")
Dbvg2 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg2.dbf")
Dbvg5 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg5.dbf")
help.start()
Dbvg2 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg2.dbf")
library("foreign")
#read in data
Surveys <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/fauna_data_final.dbf")
Grid2_5km <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid_Pts_500m <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_pts_500m_final.dbf")
Dbvg1 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg1m.dbf")
Dbvg2 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg2m.dbf")
Dbvg5 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg5m.dbf")
ls()
fix(Grid_Pts_500m)
fix(Grid_Pts_500m)
which(Grid_Pts_500m[,"dbvg5m"] > 0)
#subset the 500m point data so that we only have those that are in remnant vegetation
Grid_Pts_500m_Sub <- Grid_Pts_500m[which(Grid_Pts_500m[,"dbvg5m"] > 0),]
nrow(Grid_Pts_500m)
nrow(Grid_Pts_500m_Sub)
fix(Grid_Pts_500m_Sub)
save.image("E:\\Projects\\seq_genetics\\analysis\\distribution_models\\models\\winbugs\\winbugs_models.RData")
library("foreign")
#read in data
Surveys <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid2_5km <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid_Pts_500m <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_pts_500m_final.dbf")
Dbvg1 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg1m.dbf")
Dbvg2 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg2m.dbf")
Dbvg5 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg5m.dbf")
Aflav_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/aflav_gendist.csv",header=F,sep=",")
Koala_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/koala_gendist.csv",header=F,sep=",")
Pbrev_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pbrev_gendist.csv",header=F,sep=",")
Pnorf_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pnorf_gendist.csv",header=F,sep=",")
fix(Grid_2_5km)
ls()
rm(Grid_2_5km)
fix(Grid2_5km)
OGRIDAflav <- max(Grid2_5km[,"yfa_b90"],Grid2_5km[,"yfa_a90b00"],Grid2_5km[,"yfa_a00"]) 
fix(OGRIDAflav)
rm(OGRIDAflav)
OGRIDAflav <- max(Grid2_5km[,"yfa_b90"],Grid2_5km[,"yfa_a90b00"],Grid2_5km[,"yfa_a00"]) 
OGRIDAflav
OGRIDAflav <- ifelse((Grid2_5km[,"yfa_b90"] + Grid2_5km[,"yfa_a90b00"] + Grid2_5km[,"yfa_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years)  
OGRIDAflav
library("foreign")
#read in data
Surveys <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid2_5km <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid_Pts_500m <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_pts_500m_final.dbf")
Dbvg1 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg1m.dbf")
Dbvg2 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg2m.dbf")
Dbvg5 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg5m.dbf")
Aflav_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/aflav_gendist.csv",header=F,sep=",")
Koala_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/koala_gendist.csv",header=F,sep=",")
Pbrev_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pbrev_gendist.csv",header=F,sep=",")
Pnorf_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pnorf_gendist.csv",header=F,sep=",")
#set up data for WinBugs
#response variables
OGRIDAflav <- ifelse((Grid2_5km[,"yfa_b90"] + Grid2_5km[,"yfa_a90b00"] + Grid2_5km[,"yfa_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years)  
OGRIDKoala <- ifelse((Grid2_5km[,"kolo_b90"] + Grid2_5km[,"kol_a90b00"] + Grid2_5km[,"kol_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGRIDPbrev <- ifelse((Grid2_5km[,"sg_b90"] + Grid2_5km[,"sg_a90b00"] + Grid2_5km[,"sga_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGRIDPnorf <- ifelse((Grid2_5km[,"sq_b90"] + Grid2_5km[,"sq_a90b00"] + Grid2_5km[,"sq_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
#response variables
OGRIDAflav <- ifelse((Grid2_5km[,"yfa_b90"] + Grid2_5km[,"yfa_a90b00"] + Grid2_5km[,"yfa_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years)  
OGRIDKoala <- ifelse((Grid2_5km[,"kolob90"] + Grid2_5km[,"kol_a90b00"] + Grid2_5km[,"kol_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGRIDPbrev <- ifelse((Grid2_5km[,"sg_b90"] + Grid2_5km[,"sg_a90b00"] + Grid2_5km[,"sg_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGRIDPnorf <- ifelse((Grid2_5km[,"sq_b90"] + Grid2_5km[,"sq_a90b00"] + Grid2_5km[,"sq_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
#response variables
OGRIDAflav <- ifelse((Grid2_5km[,"yfa_b90"] + Grid2_5km[,"yfa_a90b00"] + Grid2_5km[,"yfa_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years)  
OGRIDKoala <- ifelse((Grid2_5km[,"kol_b90"] + Grid2_5km[,"kol_a90b00"] + Grid2_5km[,"kol_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGRIDPbrev <- ifelse((Grid2_5km[,"sg_b90"] + Grid2_5km[,"sg_a90b00"] + Grid2_5km[,"sg_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGRIDPnorf <- ifelse((Grid2_5km[,"sq_b90"] + Grid2_5km[,"sq_a90b00"] + Grid2_5km[,"sq_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGRIDAflav
OGRIDKoala
OGRIDPbrev
OGRIDPnorf
save.image("E:\\Projects\\seq_genetics\\analysis\\distribution_models\\models\\winbugs\\winbugs_models.RData")
ls()
rm(OGRIDKoala)
rm(OGRIDAflav)
rm(OGRIDPnorf)
rm(OGRIDPbrev)
library("foreign")
#read in data
Surveys <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid2_5km <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid_Pts_500m <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_pts_500m_final.dbf")
Dbvg1 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg1m.dbf")
Dbvg2 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg2m.dbf")
Dbvg5 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg5m.dbf")
Aflav_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/aflav_gendist.csv",header=F,sep=",")
Koala_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/koala_gendist.csv",header=F,sep=",")
Pbrev_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pbrev_gendist.csv",header=F,sep=",")
Pnorf_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pnorf_gendist.csv",header=F,sep=",")
#set up data for WinBugs
#response variables - genetic distance
GDistAflav <- Aflav_Gdist
GDistKoala <- Koala_Gdist
GDistPbrev <- Pbrev_Gdist
GDistPnorf <- Pnorf_Gdist
#response variables - occupancy - 2.5km grid level
OGridAflav <- ifelse((Grid2_5km[,"yfa_b90"] + Grid2_5km[,"yfa_a90b00"] + Grid2_5km[,"yfa_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years)  
OGridKoala <- ifelse((Grid2_5km[,"kol_b90"] + Grid2_5km[,"kol_a90b00"] + Grid2_5km[,"kol_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGridPbrev <- ifelse((Grid2_5km[,"sg_b90"] + Grid2_5km[,"sg_a90b00"] + Grid2_5km[,"sg_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGridPnorf <- ifelse((Grid2_5km[,"sq_b90"] + Grid2_5km[,"sq_a90b00"] + Grid2_5km[,"sq_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
fix(Grid_2_5km)
rm(Grid_2_5km)
rm(Grid2_5km)
library("foreign")
#read in data
Surveys <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid2_5km <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid_Pts_500m <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_pts_500m_final.dbf")
Dbvg1 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg1m.dbf")
Dbvg2 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg2m.dbf")
Dbvg5 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg5m.dbf")
Aflav_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/aflav_gendist.csv",header=F,sep=",")
Koala_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/koala_gendist.csv",header=F,sep=",")
Pbrev_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pbrev_gendist.csv",header=F,sep=",")
Pnorf_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pnorf_gendist.csv",header=F,sep=",")
#set up data for WinBugs
#response variables - genetic distance
GDistAflav <- Aflav_Gdist
GDistKoala <- Koala_Gdist
GDistPbrev <- Pbrev_Gdist
GDistPnorf <- Pnorf_Gdist
#response variables - occupancy - 2.5km grid level
OGridAflav <- ifelse((Grid2_5km[,"yfa_b90"] + Grid2_5km[,"yfa_a90b00"] + Grid2_5km[,"yfa_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years)  
OGridKoala <- ifelse((Grid2_5km[,"kol_b90"] + Grid2_5km[,"kol_a90b00"] + Grid2_5km[,"kol_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGridPbrev <- ifelse((Grid2_5km[,"sg_b90"] + Grid2_5km[,"sg_a90b00"] + Grid2_5km[,"sg_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGridPnorf <- ifelse((Grid2_5km[,"sq_b90"] + Grid2_5km[,"sq_a90b00"] + Grid2_5km[,"sq_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
fix(Grid2_5km)
fix(Surveys)
library("foreign")
#read in data
Surveys <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/fauna_data_final.dbf")
Grid2_5km <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid_Pts_500m <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_pts_500m_final.dbf")
Dbvg1 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg1m.dbf")
Dbvg2 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg2m.dbf")
Dbvg5 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg5m.dbf")
Aflav_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/aflav_gendist.csv",header=F,sep=",")
Koala_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/koala_gendist.csv",header=F,sep=",")
Pbrev_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pbrev_gendist.csv",header=F,sep=",")
Pnorf_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pnorf_gendist.csv",header=F,sep=",")
#set up data for WinBugs
#response variables - genetic distance
GDistAflav <- Aflav_Gdist
GDistKoala <- Koala_Gdist
GDistPbrev <- Pbrev_Gdist
GDistPnorf <- Pnorf_Gdist
#response variables - occupancy - 2.5km grid level
OGridAflav <- ifelse((Grid2_5km[,"yfa_b90"] + Grid2_5km[,"yfa_a90b00"] + Grid2_5km[,"yfa_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years)  
OGridKoala <- ifelse((Grid2_5km[,"kol_b90"] + Grid2_5km[,"kol_a90b00"] + Grid2_5km[,"kol_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGridPbrev <- ifelse((Grid2_5km[,"sg_b90"] + Grid2_5km[,"sg_a90b00"] + Grid2_5km[,"sg_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGridPnorf <- ifelse((Grid2_5km[,"sq_b90"] + Grid2_5km[,"sq_a90b00"] + Grid2_5km[,"sq_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
fix(Surveys)
#response variables - occupancy - site level
#get number sites per grid
NumSitesGrid <- aggregate(Surveys[which(Surveys[,"SPECIES"]=="P.nor"),"ID_2_5km"],by=list(Surveys[which(Surveys[,"SPECIES"]=="P.nor"),"ID_2_5km"]),FUN=length)
NumSitesGrid
fix(Surveys)
### REQUIRED LIBRARIES ###
library("foreign")
### FUNCTIONS ###
get.3dgrid <- function(DataInput,SitesperGrid,CaptureCol,GridID,Cnt=TRUE)
#creates a 3d array for input into winbugs with dimensions GRIDS X SITES X REPEATS
#Data Input is the raw input, SitesperGird is a nx2 matrix of the grid IDs and the number
#of sites within each grid, CaptureCol is a vector of the names of the fields
#containing the number of captures, GridID is the name of the field containing the
#grid ID number (text), Cnt indicates whether counts or presence/absence is returned 
{
#create output
Output <- array(NA,dim=c(nrow(SitesperGrid),max(SitesperGrid[,2]),length(CaptureCol)))
#get data
for (i in 1:nrow(SitesperGrid))
#loop through grids
{
for (j in 1:SitesperGrid[i,2])
#loop through sites
{
#loop through repeats
for (k in 1:5)
{
Output[i,j,k] <- DataInput[which(DataInput[,GridID] == SitesperGrid[i,1]),][j,CaptureCol[k]]
if (Output[i,j,k] == -9999)
{
Output[i,j,k] <- NA
}
if (!is.na(Output[i,j,k]))
{
if (!Cnt & Output[i,j,k] > 0)
{
Output[i,j,k] <- 1
}
}
}
}
}
return(Output)
}
### SCRIPT ###
#read in data
Surveys <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/fauna_data_final.dbf")
Grid2_5km <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid_Pts_500m <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_pts_500m_final.dbf")
Dbvg1 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg1m.dbf")
Dbvg2 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg2m.dbf")
Dbvg5 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg5m.dbf")
Aflav_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/aflav_gendist.csv",header=F,sep=",")
Koala_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/koala_gendist.csv",header=F,sep=",")
Pbrev_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pbrev_gendist.csv",header=F,sep=",")
Pnorf_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pnorf_gendist.csv",header=F,sep=",")
#set up data for WinBugs
#response variables - genetic distance
GDistAflav <- Aflav_Gdist
GDistKoala <- Koala_Gdist
GDistPbrev <- Pbrev_Gdist
GDistPnorf <- Pnorf_Gdist
#response variables - occupancy - 2.5km grid level
OGridAflav <- ifelse((Grid2_5km[,"yfa_b90"] + Grid2_5km[,"yfa_a90b00"] + Grid2_5km[,"yfa_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years)  
OGridKoala <- ifelse((Grid2_5km[,"kol_b90"] + Grid2_5km[,"kol_a90b00"] + Grid2_5km[,"kol_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGridPbrev <- ifelse((Grid2_5km[,"sg_b90"] + Grid2_5km[,"sg_a90b00"] + Grid2_5km[,"sg_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGridPnorf <- ifelse((Grid2_5km[,"sq_b90"] + Grid2_5km[,"sq_a90b00"] + Grid2_5km[,"sq_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
#response variables - occupancy - site level
#get number sites per grid
NumSitesGrid <- aggregate(Surveys[which(Surveys[,"SPECIES"]=="P.nor"),"ID_2_5km"],by=list(Surveys[which(Surveys[,"SPECIES"]=="P.nor"),"ID_2_5km"]),FUN=length)
#construct 3d matrix for response data 
OSiteAfalv <- get.3dgrid(Surveys[which(Surveys[,"SPECIES"]=="A.flav"),],NumSitesGrid,c("NC1","NC2","NC3","NC4","NC5"),"ID_2_5km",FALSE)
OSiteKoala <- get.3dgrid(Surveys[which(Surveys[,"SPECIES"]=="P.cin"),],NumSitesGrid,c("NC1","NC2","NC3","NC4","NC5"),"ID_2_5km",FALSE)
OSitePbrev <- get.3dgrid(Surveys[which(Surveys[,"SPECIES"]=="P.bre"),],NumSitesGrid,c("NC1","NC2","NC3","NC4","NC5"),"ID_2_5km",FALSE)
OSitePnorf <- get.3dgrid(Surveys[which(Surveys[,"SPECIES"]=="P.nor"),],NumSitesGrid,c("NC1","NC2","NC3","NC4","NC5"),"ID_2_5km",FALSE)
OSiteAflav
OSiteAfalv
rm(OSiteAfalv)
### REQUIRED LIBRARIES ###
library("foreign")
### FUNCTIONS ###
get.3dgrid <- function(DataInput,SitesperGrid,CaptureCol,GridID,Cnt=TRUE)
#creates a 3d array for input into winbugs with dimensions GRIDS X SITES X REPEATS
#Data Input is the raw input, SitesperGird is a nx2 matrix of the grid IDs and the number
#of sites within each grid, CaptureCol is a vector of the names of the fields
#containing the number of captures, GridID is the name of the field containing the
#grid ID number (text), Cnt indicates whether counts or presence/absence is returned 
{
#create output
Output <- array(NA,dim=c(nrow(SitesperGrid),max(SitesperGrid[,2]),length(CaptureCol)))
#get data
for (i in 1:nrow(SitesperGrid))
#loop through grids
{
for (j in 1:SitesperGrid[i,2])
#loop through sites
{
#loop through repeats
for (k in 1:5)
{
Output[i,j,k] <- DataInput[which(DataInput[,GridID] == SitesperGrid[i,1]),][j,CaptureCol[k]]
if (Output[i,j,k] == -9999)
{
Output[i,j,k] <- NA
}
if (!is.na(Output[i,j,k]))
{
if (!Cnt & Output[i,j,k] > 0)
{
Output[i,j,k] <- 1
}
}
}
}
}
return(Output)
}
### SCRIPT ###
#read in data
Surveys <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/fauna_data_final.dbf")
Grid2_5km <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_2_5km_final.dbf")
Grid_Pts_500m <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/grid_pts_500m_final.dbf")
Dbvg1 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg1m.dbf")
Dbvg2 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg2m.dbf")
Dbvg5 <- read.dbf("E:/Projects/seq_genetics/analysis/distribution_models/models/data/dbvg5m.dbf")
Aflav_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/aflav_gendist.csv",header=F,sep=",")
Koala_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/koala_gendist.csv",header=F,sep=",")
Pbrev_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pbrev_gendist.csv",header=F,sep=",")
Pnorf_Gdist <- read.table("E:/Projects/seq_genetics/analysis/distribution_models/models/data/gen_dist/pnorf_gendist.csv",header=F,sep=",")
#set up data for WinBugs
#response variables - genetic distance
GDistAflav <- Aflav_Gdist
GDistKoala <- Koala_Gdist
GDistPbrev <- Pbrev_Gdist
GDistPnorf <- Pnorf_Gdist
#response variables - occupancy - 2.5km grid level
OGridAflav <- ifelse((Grid2_5km[,"yfa_b90"] + Grid2_5km[,"yfa_a90b00"] + Grid2_5km[,"yfa_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years)  
OGridKoala <- ifelse((Grid2_5km[,"kol_b90"] + Grid2_5km[,"kol_a90b00"] + Grid2_5km[,"kol_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGridPbrev <- ifelse((Grid2_5km[,"sg_b90"] + Grid2_5km[,"sg_a90b00"] + Grid2_5km[,"sg_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
OGridPnorf <- ifelse((Grid2_5km[,"sq_b90"] + Grid2_5km[,"sq_a90b00"] + Grid2_5km[,"sq_a00"])>0,1,0) #occupancy at the 2.5km grid level based on WILDNET data (all years) 
#response variables - occupancy - site level
#get number sites per grid
NumSitesGrid <- aggregate(Surveys[which(Surveys[,"SPECIES"]=="P.nor"),"ID_2_5km"],by=list(Surveys[which(Surveys[,"SPECIES"]=="P.nor"),"ID_2_5km"]),FUN=length)
#construct 3d matrix for response data 
OSiteAflav <- get.3dgrid(Surveys[which(Surveys[,"SPECIES"]=="A.flav"),],NumSitesGrid,c("NC1","NC2","NC3","NC4","NC5"),"ID_2_5km",FALSE)
OSiteKoala <- get.3dgrid(Surveys[which(Surveys[,"SPECIES"]=="P.cin"),],NumSitesGrid,c("NC1","NC2","NC3","NC4","NC5"),"ID_2_5km",FALSE)
OSitePbrev <- get.3dgrid(Surveys[which(Surveys[,"SPECIES"]=="P.bre"),],NumSitesGrid,c("NC1","NC2","NC3","NC4","NC5"),"ID_2_5km",FALSE)
OSitePnorf <- get.3dgrid(Surveys[which(Surveys[,"SPECIES"]=="P.nor"),],NumSitesGrid,c("NC1","NC2","NC3","NC4","NC5"),"ID_2_5km",FALSE)
NumSitesGrid
ls(0
)
ls()
rm(Grid_Pts_500m_Sub)
ls()
save.image("E:\\Projects\\seq_genetics\\analysis\\distribution_models\\models\\winbugs\\winbugs_models.RData")
